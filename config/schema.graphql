type Query {
  users: [User]
  expenses: [Expense]
  incomes: [Income]
}

type Mutation{
  postExpense(amount: Float!, type: String!,  description: String): Expense!
  postIncome(amount: Float!, description: String): Income!
  deleteUser(id: ID): User!
  deleteExpense(id: ID): Expense!
  deleteIncome(id: ID): Income!
  signup(username: String!, password: String!): AuthPayload
  login(username: String!, password: String!): AuthPayload
}

type User {
  id: ID!
  username: String!
  password: String!
  expenses: [Expense]
  income: [Income]
}

type Expense {
  id: ID!
  user: User!
  amount: Float!
  type: String!
  description: String
  date: String!
}

type Income {
  id: ID!
  user: User!
  amount: Float!
  description: String
  date: String!
}

type AuthPayload {
  token: String
  user: User
}